"""empty message

Revision ID: 72830ced2319
Revises: 
Create Date: 2021-10-05 21:25:20.976925

"""
from alembic import op
import sqlalchemy as sa
import os
from flask_blog import db
from flask_blog.config import base_dir
from flask_blog.models import User, Post


# revision identifiers, used by Alembic.
revision = '72830ced2319'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('image_file', sa.String(length=20), nullable=False),
    sa.Column('password', sa.String(length=60), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    user_file = os.path.join(base_dir, 'static/seed_data/users.txt')
    user_file = open(user_file, 'r')
    for line in user_file:
        data = line.strip().split(',')
        user = User(id=data[0], username=data[1], email=data[2],
                    image_file=data[3], password=data[4])
        db.session.add(user)
        print(f"{user} added to DB")
    user_file.close()
    op.create_table('followers',
    sa.Column('follower_id', sa.Integer(), nullable=True),
    sa.Column('followed_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['followed_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['follower_id'], ['user.id'], )
    )
    op.create_table('post',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('date_posted', sa.DateTime(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    post_file = os.path.join(base_dir, 'static/seed_data/posts.txt')
    post_file = open(post_file, 'r')
    for line in post_file:
        data = line.strip().split(',')
        post = Post(id=data[0], title=data[1], content=data[2], user_id=data[3])
        db.session.add(post)
        print(f'{post} added to DB')
    post_file.close()
    follow_file = os.path.join(base_dir, 'static/seed_data/followers.txt')
    follow_file = open(follow_file, 'r')
    for line in follow_file:
        data = line.strip().split(',')
        user1 = User.query.filter_by(id=data[0]).first()
        user2 = User.query.filter_by(id=data[1]).first()
        user1.followed.append(user2)
    db.session.commit()
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('post')
    op.drop_table('followers')
    op.drop_table('user')
    # ### end Alembic commands ###
